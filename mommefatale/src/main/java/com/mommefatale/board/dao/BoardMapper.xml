<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <mapper namespace="com.mommefatale.board.dao.BoardMapper"> -->
<mapper namespace="BoardMapper">

	<resultMap id="communityResultMap" type="com.mommefatale.board.model.CommunityBoardVO">
		<result property="no" column="community_no" jdbcType="BIGINT" />
		<result property="writer" column="community_writer" jdbcType="VARCHAR" />
		<result property="subject" column="community_subject" jdbcType="VARCHAR" />
		<result property="content" column="community_content" jdbcType="VARCHAR" />
		<result property="regdate" column="community_regdate" jdbcType="VARCHAR" />
		<result property="update_date" column="community_update_date" jdbcType="VARCHAR" />
		<result property="ref" column="community_ref" jdbcType="BIGINT" />
		<result property="step" column="community_step" jdbcType="BIGINT" />
		<result property="depth" column="community_depth" jdbcType="BIGINT" />
		<result property="section" column="community_section" jdbcType="VARCHAR" />
		<result property="view" column="community_view" jdbcType="BIGINT" />
	</resultMap>

	<!-- Community 리스트 가져오기 -->
	<select id="communityList" parameterType="java.util.Map"
		resultMap="communityResultMap">
		<![CDATA[select * from (select rownum rnum, community_no, community_section, 
		community_subject, community_writer, community_regdate, 
		community_ref, community_step, community_depth, community_view 
		from (select * from community order by community_ref desc, community_step asc))
		where rnum >= #{startRow} and rnum <= #{endRow}]]>
	</select>

	<!-- Community 글내용 가져오기 -->
	<select id="communityContent" parameterType="java.lang.Integer"
		resultMap="communityResultMap">
		<![CDATA[select * from community where community_no=#{no}]]>
	</select>

	<!-- Community 글쓰기 -->
	<insert id="communityWrite" parameterType="java.util.Map">
		insert into community(community_no, community_writer, community_subject, 
		community_content, community_regdate, community_update_date, 
		community_ref, community_step, community_depth, community_section) 
		values(community_seq.nextval, #{writer}, #{subject}, #{content}, sysdate, sysdate, 
		<choose>
		<when test='section.equals("공지사항")'>
		99999
		</when>
		<otherwise>
		community_seq.nextval
		</otherwise>
		</choose>
		,0, 0, #{section})
	</insert>

	<!-- Community 답글쓰기 -->
	<insert id="communityReply" parameterType="java.util.Map">
		<![CDATA[insert into community(community_no, community_writer, community_subject, 
		community_content, community_regdate, community_update_date, 
		community_ref, community_step, community_depth, community_section) 
		values(community_seq.nextval, #{writer}, #{subject}, #{content}, sysdate, sysdate, 
		#{ref},#{step}+1,#{depth}+1, #{section})]]>
	</insert>

	<!-- Community 답글달기 addStep -->
	<update id="addStep" parameterType="java.util.Map">
		<![CDATA[update community set community_step=community_step+1 
		where community_ref=#{ref} and community_step > #{step}]]>
	</update>

	<!-- Community 조회수 증가 -->
	<update id="communityView" parameterType="java.lang.Integer">
		<![CDATA[update community set community_view=community_view+1 
		where community_no=#{no}]]>
	</update>

	<!-- Community 글수정 -->
	<update id="communityUpdate" parameterType="java.util.Map">
		<![CDATA[update community set community_writer=#{writer}, community_subject=#{subject}, 
		community_content=#{content}, community_update_date=sysdate, community_section=#{section} 
		where community_no=#{no}]]>
	</update>

	<!-- Community 글삭제 -->
	<delete id="communityDelete" parameterType="java.lang.Integer">
		<![CDATA[delete from community where community_no=#{no}]]>
	</delete>

	<!-- Community 총 게시물 수 -->
	<select id="communityCount" resultType="java.lang.Integer">
		<![CDATA[select count(*) from community]]>
	</select>

	<!-- Community 인덱스 리스트 -->
	<select id="indexCommunityList" resultMap="communityResultMap">
		<![CDATA[select to_char(community_update_date,'mm-dd') as community_update_date, community_no, community_subject, community_view
						from (select rownum rnum, community_update_date, community_no, community_subject, community_view 
						from community order by community_update_date desc, community_view desc)
      					where rnum >= 0 and rnum <= (select count(*) from community) and community_view > = 20]]>
	</select>
	
	<!-- Community 인덱스 공지사항 리스트 -->
	<select id="indexNoticeList" resultMap="communityResultMap">
		<![CDATA[select to_char(community_update_date,'mm-dd') as community_update_date, community_no, community_subject
						from community where community_section = '공지사항' order by community_update_date desc]]>
	</select>
	
</mapper>